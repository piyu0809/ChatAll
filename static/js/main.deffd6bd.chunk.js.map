{"version":3,"sources":["icon.png","components/Messagelist.js","components/Header.js","components/NewroomForm.js","components/Roomlist.js","components/SendmessageForm.js","components/Header1.js","App.js","config.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Messagelist","node","ReactDom","findDOMNode","this","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","_this","props","roomId","react_default","a","createElement","className","message","map","index","user","userId","senderId","key","text","Component","Header","roomName","src","icon","width","height","align","NewroomForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","target","value","preventDefault","createRoom","onSubmit","type","onChange","placeholder","required","id","Roomlist","orderedRooms","toConsumableArray","rooms","sort","b","room","active","onClick","subscribeToRooms","href","name","SendMessageForm","console","log","sendMessage","disabled","Header1","App","messages","joinableRooms","joinedRooms","currentUser","getRooms","_this2","chatManager","Chatkit","ChatManager","instanceLocator","tokenProvider","TokenProvider","url","connect","then","_this3","subscribeToRoom","hooks","onNewMessage","concat","_this4","getJoinableRooms","catch","err","_this5","components_Header1","components_Header","components_Roomlist","components_Messagelist","SendmessageForm","components_NewroomForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deffd6bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.88da9684.png\";","import React , { Component } from 'react';\n\nimport ReactDom from 'react-dom';\n\n\n\n\nclass Messagelist extends Component {\n  componentWillUpdate(){\n    const node = ReactDom.findDOMNode(this);\n    this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 200 >= node.scrollHeight;\n\n  }\n\n  componentDidUpdate(){\n    if(this.shouldScrollToBottom){\n      const node = ReactDom.findDOMNode(this);\n      node.scrollTop = node.scrollHeight\n    }\n  }\n\n\n\n  render(){\n    if(!this.props.roomId){\n      return(\n                <div className=\"message-list\">\n                     <div className=\"join-room\">\n                         &larr; Join a room!\n                     </div>\n                </div>\n               )\n             }\n    return(\n      <div className = \"message-list\">\n        { this.props.message.map((message,index) => {\n          const user = this.props.userId === message.senderId ? \"me\":message.senderId;\n          return(\n            <div key={index} className=\"message\">\n            <div className=\"message-username\">{user}</div>\n            <div className=\"message-text\">{message.text}</div>\n            </div>\n          )\n        })\n      }\n      </div>\n    );\n  }\n}\n\n\n\nexport default Messagelist;\n","import React , { Component } from 'react';\nimport icon from '../icon.png';\n\n\n\n\nclass Header extends Component {\n\n  render(){\n\n    return(\n      <div className = \"header\">\n        {this.props.roomName}\n        <img className=\"icon\" src={icon} width=\"100\" height=\"60\" align=\"right\"/>\n\n      </div>\n    );\n  }\n}\n\n\nexport default Header;\n","import React , { Component } from 'react';\n\n\n\nclass NewroomForm extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      roomName: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n\n  }\n\nhandleChange(e){\nthis.setState({\n  roomName: e.target.value\n})\n}\nhandleSubmit(e){\n  e.preventDefault()\n  this.props.createRoom(this.state.roomName);\n  this.setState({\n    roomName: ''\n  })\n\n\n}\n\n\n  render(){\n    return(\n      <div className=\"new-room-form\" >\n        <form onSubmit = {this.handleSubmit}>\n          <input type = \"text\"\n            value = {this.state.roomName}\n            onChange = {this.handleChange}\n            placeholder = \"Create new groups here\"\n            required/>\n          <button id=\"create-room-btn\" type=\"submit\">+</button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default NewroomForm;\n","import React , { Component } from 'react';\n\n\n\nclass Roomlist extends Component {\n  render(){\n    const orderedRooms = [...this.props.rooms].sort((a,b) => a.id - b.id);\n    return(\n      <div className=\"rooms-list\">\n        <ul>\n          <h3>Groups</h3>\n          {orderedRooms.map(room =>\n          { const active = this.props.roomId === room.id ? \"active\":\"\";\n            return(\n              <li key={room.id} className = {\"room\" + active }>\n                <a onClick={() => this.props.subscribeToRooms(room.id)}\n                  href=\"#\">\n                  {room.name}\n                </a>\n              </li>\n            )\n\n          })}\n\n\n\n        </ul>\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default Roomlist;\n","import React , { Component } from 'react';\n\nclass SendMessageForm extends Component {\n\n\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      message: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit =   this.handleSubmit.bind(this);\n  }\n\nhandleChange(e){\n\nthis.setState({\n  message: e.target.value\n})\n\n\n\n}\nhandleSubmit(e){\ne.preventDefault();\nconsole.log(this.state.message);\nthis.props.sendMessage(this.state.message);\n\nthis.setState({\n  message: ''\n})\n\n}\n\n\n  render(){\n    return(\n        <form className = \"send-message-form\"\n          onSubmit = {this.handleSubmit}>\n          <input\n            type=\"text\"\n            disabled={this.props.disabled}\n            onChange = {this.handleChange}\n            value={this.state.message}\n            placeholder = \"Type a message...\" />\n\n\n        </form>\n\n    );\n  }\n}\n\n\n\nexport default SendMessageForm;\n","import React , { Component } from 'react';\n\nclass Header1 extends Component {\n  \n  render(){\n    return(\n      <div className = \"header1\">\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default Header1;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Chatkit from '@pusher/chatkit';\nimport Messagelist from './components/Messagelist';\nimport Header from './components/Header';\nimport NewroomForm from './components/NewroomForm';\nimport Roomlist from './components/Roomlist';\nimport SendmessageForm from './components/SendmessageForm';\nimport Header1 from './components/Header1';\n\nimport { tokenUrl, instanceLocator } from './config';\n\n\nclass App extends Component {\n\n\nconstructor(props){\n  super(props);\n\n  this.state = {\n    messages : [],\n    joinableRooms: [],\n    joinedRooms: [],\n    roomId: null,\n    currentUser: '',\n    userId: '',\n    roomName: ''\n\n  };\n  this.sendMessage = this.sendMessage.bind(this);\n  this.subscribeToRooms = this.subscribeToRooms.bind(this);\n  this.getRooms = this.getRooms.bind(this);\n  this.createRoom = this.createRoom.bind(this)\n}\n\n  componentDidMount() {\n     const chatManager = new Chatkit.ChatManager({\n         instanceLocator,\n         userId: 'piyu',\n         tokenProvider: new Chatkit.TokenProvider({\n             url: tokenUrl\n         })\n     })\n     this.setState({\n       userId: 'piyu'\n     })\n\n     chatManager.connect()\n     .then(currentUser => {\n       this.setState({\n         currentUser: currentUser\n       })\n        this.getRooms()\n      })\n }\n\nsubscribeToRooms(roomId){\nthis.setState({\n  messages: []\n})\nthis.state.currentUser.subscribeToRoom({\n      roomId: roomId,\n      hooks: {\n          onNewMessage: message => {\n             this.setState({\n               messages: [...this.state.messages, message]\n             })\n          }\n      }\n  })\n  .then(room => {\n    this.setState({\n      roomId: room.id,\n      roomName: room.name\n    })\n    this.getRooms()\n  })\n}\n\ngetRooms(){\n  this.state.currentUser.getJoinableRooms()\n   .then(joinableRooms => {\n     this.setState({\n       joinableRooms,\n       joinedRooms: this.state.currentUser.rooms\n     })\n   })\n   .catch( err => console.log(\"error getting joinable rooms\", err));\n}\n\n sendMessage(text){\n   this.state.currentUser.sendMessage({\n     text,\n     roomId: this.state.roomId\n   })\n }\n\n createRoom(name){\n   this.state.currentUser.createRoom({\n     name\n   })\n   .then(room => this.subscribeToRooms(room.id))\n   .catch(err => console.log(\"Error Creating room\", err))\n }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header1 />\n        <Header\n          roomName = {this.state.roomName}\n           />\n        <Roomlist\n          roomId = {this.state.roomId}\n          subscribeToRooms = {this.subscribeToRooms}\n          rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]}/>\n        <Messagelist\n          userId={this.state.userId}\n          currentUser={this.state.currentUser}\n          roomId = {this.state.roomId}\n          message={this.state.messages} />\n        <SendmessageForm\n          disabled = {!this.state.roomId}\n          sendMessage = {this.sendMessage}/>\n        <NewroomForm\n          createRoom = {this.createRoom} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\n\nconst tokenUrl =   \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/0317d602-bac4-48fd-bd67-d76aa8e2b610/token\";\nconst instanceLocator = \"v1:us1:0317d602-bac4-48fd-bd67-d76aa8e2b610\";\n\n\n\nexport { tokenUrl , instanceLocator}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}